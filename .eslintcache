[{"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GlobalStyles.js":"1","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/DashboardPreview.js":"2","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/PatientDialog.js":"3","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/colors.js":"4","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/BookingView.js":"5","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/Corporates.js":"6","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/services/PDFService.js":"7","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/DateFormatter.js":"8","/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/Title.js":"9","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/Title.js":"10","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/services/api.js":"11","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/TimeStampDialog.js":"12","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/calendar-admin/WeekView.js":"13","/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/NewBookingDialog.js":"14","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/PayDialog.js":"15","/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/calendar-admin/MonthView.js":"16","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/services/BookService.js":"17","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/services/PDFService.js":"18","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/WeekViewCell.js":"19","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/DateDialog.js":"20","/Users/mohammad/MyProjects/museumdental-payment-admin/src/TokenVerifier.js":"21","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GlobalPath.js":"22","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/PatientsTable.js":"23","/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/MonthViewCell.js":"24","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/Chart.js":"25","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/BookingTable.js":"26","/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/Corporates.js":"27","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/Corporates.js":"28","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/BookingView.js":"29","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/calendar-admin/WeekView.js":"30","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/CurrentVisits.js":"31","/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/PriceCalculator.js":"32","/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/Title.js":"33","/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/calendar-admin/DayViewCell.js":"34","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/calendar-admin/WeekViewCell.js":"35","/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/NewBookingDialog.js":"36"},{"size":2786,"mtime":1616154925000,"results":"37","hashOfConfig":"38"},{"size":2557,"mtime":1621502015000,"results":"39","hashOfConfig":"38"},{"size":157616,"mtime":1620221123000,"results":"40","hashOfConfig":"38"},{"size":353,"mtime":1618391875000,"results":"41","hashOfConfig":"38"},{"size":3808,"mtime":1616154925000,"results":"42","hashOfConfig":"38"},{"size":48,"mtime":1616154925000,"results":"43","hashOfConfig":"38"},{"size":1245,"mtime":1616154925000,"results":"44","hashOfConfig":"38"},{"size":747,"mtime":1616154925000,"results":"45","hashOfConfig":"38"},{"size":342,"mtime":1616154925000,"results":"46","hashOfConfig":"38"},{"size":342,"mtime":1616154925000,"results":"47","hashOfConfig":"38"},{"size":194,"mtime":1616154925000,"results":"48","hashOfConfig":"38"},{"size":10442,"mtime":1616154925000,"results":"49","hashOfConfig":"38"},{"size":3968,"mtime":1616154925000,"results":"50","hashOfConfig":"38"},{"size":18806,"mtime":1616154925000,"results":"51","hashOfConfig":"38"},{"size":13232,"mtime":1616154925000,"results":"52","hashOfConfig":"38"},{"size":2543,"mtime":1616154925000,"results":"53","hashOfConfig":"38"},{"size":4517,"mtime":1620278100000,"results":"54","hashOfConfig":"38"},{"size":313,"mtime":1616154925000,"results":"55","hashOfConfig":"38"},{"size":14594,"mtime":1617461482000,"results":"56","hashOfConfig":"38"},{"size":11675,"mtime":1618830512000,"results":"57","hashOfConfig":"38"},{"size":519,"mtime":1616154925000,"results":"58","hashOfConfig":"38"},{"size":671,"mtime":1621502102000,"results":"59","hashOfConfig":"38"},{"size":15640,"mtime":1618749442000,"results":"60","hashOfConfig":"38"},{"size":15150,"mtime":1617461384000,"results":"61","hashOfConfig":"38"},{"size":3220,"mtime":1620221123000,"results":"62","hashOfConfig":"38"},{"size":37960,"mtime":1616154925000,"results":"63","hashOfConfig":"38"},{"size":48,"mtime":1616154925000,"results":"64","hashOfConfig":"38"},{"size":48,"mtime":1616154925000,"results":"65","hashOfConfig":"38"},{"size":3743,"mtime":1616154925000,"results":"66","hashOfConfig":"38"},{"size":3968,"mtime":1616154925000,"results":"67","hashOfConfig":"38"},{"size":5808,"mtime":1616154925000,"results":"68","hashOfConfig":"38"},{"size":578,"mtime":1616154925000,"results":"69","hashOfConfig":"38"},{"size":342,"mtime":1616154925000,"results":"70","hashOfConfig":"38"},{"size":8586,"mtime":1616154925000,"results":"71","hashOfConfig":"38"},{"size":6223,"mtime":1616154925000,"results":"72","hashOfConfig":"38"},{"size":13841,"mtime":1616154925000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1onefd4",{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GlobalStyles.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/DashboardPreview.js",["148","149","150","151","152","153","154"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/PatientDialog.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { useEffect, useRef, useState } from \"react\";\nimport BookService from \"./services/BookService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Checkbox,\n    CircularProgress,\n    DialogActions,\n    DialogContentText,\n    Divider,\n    FormControlLabel,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    Link,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Tooltip,\n} from \"@material-ui/core\";\nimport GlobalState from \"./../GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport PropTypes from \"prop-types\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport NumberFormat from \"react-number-format\";\n\nimport AccessAlarmsIcon from '@material-ui/icons/AccessAlarms';\nimport DateField from \"./DateField\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport PatientService from \"./services/PatientService\";\nimport dateFormat from \"dateformat\";\n\nimport SaveIcon from '@material-ui/icons/Save';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n            style={{ width: \"100%\" }}\n        >\n            {value === index && (\n                <div style={{ padding: \"20px\", width: \"100%\" }}>\n                    {children}\n                </div>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n\n    root: {\n        paddingTop: \"8px\",\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 224,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 5,\n        color: \"#fff\",\n    },\n\n    titleCenter: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        borderBottom: `2px dashed ${theme.palette.primary.main}`\n    },\n\n    eyeText: {\n        width: \"100%\",\n        textAlign: \"left\",\n        fontSize: \"1.1rem\",\n        color: theme.palette.primary.main,\n        fontWeight: \"500\",\n        paddingTop: \"15px\"\n    }\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function PatientDialog(props) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [patient, setPatient] = React.useState({ formData: {} })\n    const [saving, setSaving] = React.useState(false);\n\n\n    const [patientIDError, setPatientIDError] = React.useState(false)\n    const [nameError, setNameError] = React.useState(false)\n    const [surnameError, setSurnameError] = React.useState(false)\n    const [birthDateError, setBirthDateError] = React.useState(false)\n\n    const [patientRepeated, setPatientRepeated] = React.useState(false)\n\n\n    const [value, setValue] = React.useState(0);\n\n    const [history, setHistory] = React.useState([]);\n    const [backupFormData, setBackUpFormData] = React.useState(null);\n\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false)\n\n    const handleCloseDeleteDialog = () => {\n        setOpenDeleteDialog(false)\n    }\n\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if (props.open) {\n            const _history = []\n\n            if (props.patient) {\n                setPatient({ ...props.patient, formData: props.patient.formData ? JSON.parse(props.patient.formData) : {} })\n                setBackUpFormData(props.patient.formData ? JSON.parse(props.patient.formData) : {})\n                if (props.patient.history) {\n                    props.patient.history.forEach(record => {\n                        _history.push(JSON.parse(record))\n                    });\n                    setSelectedVersion(0)\n                }\n            }\n            else {\n                setPatient({ formData: {},  name : props.name || '', surname: props.surname || ''})\n            }\n\n            setHistory(_history.reverse())\n\n        }\n    }, [props.patient, props.open])\n\n\n\n    const handleClose = () => {\n        props.handleClose();\n        setValue(0)\n        setPatient({ formData: {} })\n        setPatientIDError(false)\n        setNameError(false)\n        setSurnameError(false)\n        setPatientRepeated(false)\n    };\n\n    const saveClicked = async () => {\n\n        if (!validatePatient()) {\n            setValue(0)\n            return\n        }\n\n        try {\n            setPatientRepeated(false)\n            setSaving(true)\n            patient.formData = JSON.stringify(patient.formData)\n            if (props.patient) {\n                const res = await PatientService.updatePatient({ id: patient._id, patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                }\n            } else {\n                const res = await PatientService.registerNewPatient({ patient: patient })\n                setSaving(false)\n                if (res.data.status === \"OK\") {\n                    setState(state => ({ ...state, patientDialogDataChanged: !state.patientDialogDataChanged }))\n                    handleClose();\n                } else if (res.data.status === \"FAILED\" && res.data.error === \"Repeated Patient!\") {\n                    setPatientIDError(true)\n                    setPatientRepeated(true)\n                    setValue(0)\n\n                }\n            }\n        }\n        catch (err) {\n            setSaving(false)\n            console.error(err)\n        }\n    }\n\n    const deleteClicked = async () => {\n\n        setOpenDeleteDialog(false)\n\n        setSaving(true)\n        try {\n            await PatientService.deletePatient(props.patient._id)\n            setSaving(false)\n            setState((state) => ({\n                ...state,\n                patientDialogDataChanged: !state.patientDialogDataChanged\n                    ? true\n                    : false,\n            }));\n            handleClose();\n        }\n        catch (err) {\n            console.error(err)\n            setSaving(false)\n        }\n    }\n\n\n\n    const validatePatient = () => {\n        var error = false\n        if (!patient.patientID || patient.patientID.trim().length === 0) {\n            error = true\n            setPatientIDError(true)\n        }\n        if (!patient.name || patient.name.trim().length === 0) {\n            error = true\n            setNameError(true)\n        }\n\n        if (!patient.surname || patient.surname.trim().length === 0) {\n            error = true\n            setSurnameError(true)\n        }\n\n        if (patient.birthDate && patient.birthDate.length !== 10) {\n            setBirthDateError(true)\n            error = true\n        }\n\n        return !error\n\n    }\n\n    const formatDate = (date) => {\n        return dateFormat(date, \"dd-mm-yyyy , HH:MM:ss\")\n    }\n\n    const [selectedVersion, setSelectedVersion] = React.useState(0)\n\n    const showHistoryComboBox = () => {\n        return (\n            <React.Fragment>\n                <div style={{ marginTop: \"-10px\" }}>\n                    <span style={{ color: \"#fff\", fontWeight: \"500\", fontSize: \"1rem\", marginRight: \"10px\" }}>\n                        Version :\n                    </span>\n                    <Select\n                        label=\"Version\"\n                        labelId=\"version-label\"\n                        id=\"version-label\"\n                        style={{ color: \"#fff\", padding: \"0px 10px\" }}\n                        value={selectedVersion}\n                        onChange={(event) => {\n                            setSelectedVersion(event.target.value)\n                            if (event.target.value === 0) {\n                                setPatient({ ...patient, formData: backupFormData })\n                            } else {\n                                setPatient({ ...patient, formData: history[event.target.value - 1] })\n                            }\n\n                        }}\n\n                    >\n                        <MenuItem value={0}>{`${formatDate(patient.formData.timeStamp)} ( Current )`}</MenuItem>\n\n                        {history.map((item, index) => (\n                            <MenuItem value={index + 1}>{`${formatDate(item.timeStamp)} ( History )`}</MenuItem>\n                        ))\n                        }\n                    </Select>\n\n                </div>\n            </React.Fragment>\n        )\n    }\n\n\n    return (\n        <React.Fragment>\n            <React.Fragment>\n                <Dialog fullScreen open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar} style={(selectedVersion > 0 && history && history.length > 0) ? { backgroundColor: \"#777\" } : {}} color=\"secondary\">\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {props.title}\n                            </Typography>\n\n\n                            <Button startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\" onClick={saveClicked} disabled={selectedVersion > 0 && history && history.length > 0}>\n                                {props.saveButtonText}\n                            </Button>\n                        </Toolbar>\n\n                        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n\n                            {history && history.length > 0 && (\n                                <Grid item>\n                                    {showHistoryComboBox()}\n                                </Grid>\n                            )}\n                        </Grid>\n\n                    </AppBar>\n\n                    <div className={classes.root}>\n                        <Tabs\n                            orientation=\"vertical\"\n                            variant=\"scrollable\"\n                            value={value}\n                            onChange={handleChange}\n                            aria-label=\"Vertical tabs example\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"secondary\"\n                            className={classes.tabs}\n                        >\n                            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n                            <Tab label={`History & Symptoms`} {...a11yProps(1)} />\n                            <Tab label=\"Dry Eyes\" {...a11yProps(2)} />\n                            <Tab label=\"Ocular Examination\" {...a11yProps(3)} />\n                            <Tab label=\"Diagnostics\" {...a11yProps(4)} />\n                            <Tab label=\"Uncorrected VA\" {...a11yProps(5)} />\n                            <Tab label=\"Refraction\" {...a11yProps(6)} />\n                            <Tab label=\"Auto Refraction\" {...a11yProps(7)} />\n                            <Tab label=\"Manifest Refraction\" {...a11yProps(8)} />\n                            <Tab label=\"Target Refraction\" {...a11yProps(9)} />\n                            <Tab label=\"Recommendation\" {...a11yProps(10)} />\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        disabled={props.patient}\n                                        name=\"patientid\"\n                                        id=\"patientid\"\n                                        label=\"Patient ID\"\n                                        fullWidth\n                                        required\n                                        helperText={patientRepeated ? 'This PatientID is already assigned to another patient' : ''}\n                                        error={patientIDError}\n                                        value={patient.patientID || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, patientID: event.target.value })\n                                            setPatientIDError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"firstname\"\n                                        id=\"firstname\"\n                                        label=\"First Name\"\n                                        fullWidth\n                                        required\n                                        error={nameError}\n                                        value={patient.name || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, name: event.target.value })\n                                            setNameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"surname\"\n                                        id=\"surname\"\n                                        label=\"Surname\"\n                                        fullWidth\n                                        required\n                                        error={surnameError}\n                                        value={patient.surname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, surname: event.target.value })\n                                            setSurnameError(false)\n                                        }}\n                                        autoComplete=\"none\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"gender-label\">Gender</InputLabel>\n                                        <Select\n                                            label=\"Gender\"\n                                            labelId=\"gender-label\"\n                                            id=\"gender-label\"\n                                            fullWidth\n                                            style={{ height: \"90px\" }}\n                                            value={patient.gender || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, gender: event.target.value })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Male\"}>Male</MenuItem>\n                                            <MenuItem value={\"Female\"}>Female</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8} style={{ marginTop: \"-20px\" }} >\n                                    <DateField\n                                        error={birthDateError}\n                                        value={patient.birthDate || ''}\n                                        title=\"DOB\"\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, birthDate: value })\n                                            setBirthDateError(false)\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"postcode\"\n                                        id=\"postcode\"\n                                        label=\"Postcode\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.postCode || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, postCode: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={8}>\n                                    <TextField\n                                        name=\"address\"\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.address || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, address: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"hometel\"\n                                        id=\"hometel\"\n                                        label=\"Home Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.homeTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, homeTel: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"mobiletel\"\n                                        id=\"mobiletel\"\n                                        label=\"Mobile Tel\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.mobileTel || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, mobileTel: event.target.value })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={4}>\n                                    <TextField\n                                        name=\"email\"\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.email || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, email: event.target.value })\n                                        }}\n                                        variant=\"outlined\"\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"occupation\"\n                                        id=\"occupation\"\n                                        label=\"Occupation\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.occupation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, occupation: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"gpname\"\n                                        id=\"gpname\"\n                                        label={`GP Name & Address`}\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.gpname || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, gpname: event.target.value } })\n                                        }}\n\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"kincontact\"\n                                        id=\"kincontact\"\n                                        label=\"Next of Kin Contact\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.kincontact || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, kincontact: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"prevsighttest\"\n                                        id=\"prevsignttest\"\n                                        label=\"Previous Sight Test\"\n                                        fullWidth\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevsighttest || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevsighttest: event.target.value } })\n                                        }}\n                                        variant=\"outlined\"\n\n                                    />\n                                </Grid>\n\n                                {props.patient && (\n                                    <Grid item xs={12} style={{ marginTop: \"20px\" }}>\n                                        <Button\n                                            onClick={() => setOpenDeleteDialog(true)}\n                                            variant=\"contained\"\n                                            fullWidth\n                                            color=\"primary\"\n                                            // style={{ width: \"100px\" }}\n                                            style={{ backgroundColor: \"#c70000\", color: \"#fff\" }}\n                                            disabled={saving}\n                                        >\n                                            Delete This Patient\n                                  </Button>\n                                    </Grid>\n\n\n                                )}\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={1}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cc\"\n                                        id=\"cc\"\n                                        label=\"C.C\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cc || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cc: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevmedicalhistory\"\n                                        id=\"prevmedicalhistory\"\n                                        label=\"Previous Medical History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevmedicalhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevmedicalhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"prevocularhistory\"\n                                        id=\"prevocularhistory\"\n                                        label=\"Previous Ocular History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.prevocularhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, prevocularhistory: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"familyhistory\"\n                                        id=\"familyhistory\"\n                                        label=\"Family History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.familyhistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, familyhistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"medications\"\n                                        id=\"medications\"\n                                        label=\"Medications\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.medications || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, medications: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"grafth\"\n                                        id=\"grafth\"\n                                        label=\"Graft H\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.grafth || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, grafth: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"allergies\"\n                                        id=\"allregies\"\n                                        label=\"Allergies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.allergies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, allergies: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"contactlenswearer\"\n                                        id=\"contactlenswearer\"\n                                        label=\"Contact Lens Wearer\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        placeholder={` Yes/No \\n Soft/RGP/EW`}\n                                        value={patient.formData.contactlenswearer || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlenswearer: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"hobbies\"\n                                        id=\"hobbies\"\n                                        label=\"Lifestyle / Hobbies\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.hobbies || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, hobbies: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vdu\"\n                                        id=\"vdu\"\n                                        label=\"VDU\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vdu || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vdu: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"driver\"\n                                        id=\"driver\"\n                                        label=\"Driver\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.driver || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, driver: event.target.value } })\n                                        }}\n\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"othernotes\"\n                                        id=\"othernotes\"\n                                        label=\"Other Notes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.othernotes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, othernotes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={2}>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"dryevehistory\"\n                                        id=\"dryevehistory\"\n                                        label=\"Dry Eye History\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.dryeyehistory || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, dryeyehistory: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"nightvisionglare\"\n                                        id=\"nightvisionglare\"\n                                        label=\"Night Vision / Glare\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nightvisionglare || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nightvisionglare: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"ocularirritation\"\n                                        id=\"ocularirritation\"\n                                        label=\"Ocular Irritation\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ocularirritation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ocularirritation: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"wateryeyes\"\n                                        id=\"wateryeyes\"\n                                        label=\"Watery Eyes\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.wateryeyes || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, wateryeyes: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        name=\"speedquestionariedone\"\n                                        id=\"speedquestionariedone\"\n                                        label=\"SPEED Questionnaire Done\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.speedquestionariedone || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, speedquestionariedone: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={3}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter || ''}>\n                                        ANTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornearight\"\n                                        id=\"cornearight\"\n                                        label=\"Cornea (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornearight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornearight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cornealeft\"\n                                        id=\"cornealeft\"\n                                        label=\"Cornea (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cornealeft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cornealeft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesright\"\n                                        id=\"lidslashesright\"\n                                        label={`Lids & Lashes (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lidslashesleft\"\n                                        id=\"lidslashesleft\"\n                                        label={`Lids & Lashes (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lidslashesleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lidslashesleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaright\"\n                                        id=\"conjunctivaright\"\n                                        label={`Conjunctiva (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"conjunctivaleft\"\n                                        id=\"conjunctivaleft\"\n                                        label={`Conjunctiva (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.conjunctivaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, conjunctivaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilright\"\n                                        id=\"pupilright\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupilleft\"\n                                        id=\"pupilleft\"\n                                        label={`Pupil/PERRLA/RPAD/SIZE (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupilleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupilleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acright\"\n                                        id=\"acright\"\n                                        label={`A.C. (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acleft\"\n                                        id=\"acleft\"\n                                        label={`A.C. (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensright\"\n                                        id=\"lensright\"\n                                        label={`Lens (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"lensleft\"\n                                        id=\"lensleft\"\n                                        label={`Lens (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.lensleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, lensleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousright\"\n                                        id=\"vitreousright\"\n                                        label={`Vitreous (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"vitreousleft\"\n                                        id=\"vitreousleft\"\n                                        label={`Vitreous (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vitreousleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vitreousleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombright\"\n                                        id=\"ombright\"\n                                        label={`OMB (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"tbutright\"\n                                        id=\"tbutright\"\n                                        label={`TBUT (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.tbutright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, tbutright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"ombleft\"\n                                        id=\"ombleft\"\n                                        label={`OMB (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.ombleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, ombleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ margingTop: \"10px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        POSTERIOR SEGMENT\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discright\"\n                                        id=\"discright\"\n                                        label={`DISC (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"discleft\"\n                                        id=\"discleft\"\n                                        label={`DISC (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.discleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, discleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdright\"\n                                        id=\"cdright\"\n                                        label={`C:D (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"cdleft\"\n                                        id=\"cdleft\"\n                                        label={`C:D (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cdleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cdleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsright\"\n                                        id=\"bloodvesselsright\"\n                                        label={`Blood Vessels (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"bloodvesselsleft\"\n                                        id=\"bloodvesselsleft\"\n                                        label={`Blood Vessels (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.bloodvesselsleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, bloodvesselsleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"macularight\"\n                                        id=\"macularight\"\n                                        label={`Macula (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.macularight || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, macularight: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculaleft\"\n                                        id=\"maculaleft\"\n                                        label={`Macula (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculaleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryright\"\n                                        id=\"peripheryright\"\n                                        label={`Periphery (Right Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"peripheryleft\"\n                                        id=\"peripheryleft\"\n                                        label={`Periphery (Left Eye)`}\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.peripheryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, peripheryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={4}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamright\"\n                                        id=\"pupillowlightdiamright\"\n                                        label=\"Pupil (low light diam) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pupillowlightdiamleft\"\n                                        id=\"pupillowlightdiamleft\"\n                                        label=\"Pupil (low light diam) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pupillowlightdiamleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pupillowlightdiamleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryright\"\n                                        id=\"pachmetryright\"\n                                        label=\"Pachmetry (μm) (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pachmetryleft\"\n                                        id=\"pachmetryleft\"\n                                        label=\"Pachmetry (μm) (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pachmetryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pachmetryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryright\"\n                                        id=\"keratometryright\"\n                                        label=\"Keratometry (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"keratometryleft\"\n                                        id=\"keratometryleft\"\n                                        label=\"Keratometry (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.keratometryleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, keratometryleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthright\"\n                                        id=\"acdepthright\"\n                                        label=\"AC Depth (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"acdepthleft\"\n                                        id=\"acdepthleft\"\n                                        label=\"AC Depth (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.acdepthleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, acdepthleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessright\"\n                                        id=\"maculathicnessright\"\n                                        label=\"Macula Thickness (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"maculathicnessleft\"\n                                        id=\"maculathicnessleft\"\n                                        label=\"Macula Thickness (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.maculathicnessleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, maculathicnessleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentright\"\n                                        id=\"octcommentright\"\n                                        label=\"OCT Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"octcommentleft\"\n                                        id=\"octcommentleft\"\n                                        label=\"OCT Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.octcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, octcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentright\"\n                                        id=\"pentacamcommentright\"\n                                        label=\"Pentacam Comment (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        name=\"pentacamcommentleft\"\n                                        id=\"pentacamcommentleft\"\n                                        label=\"Pentacam Comment (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.pentacamcommentleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, pentacamcommentleft: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={5}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaright\"\n                                        id=\"distancevaright\"\n                                        label=\"Distance (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevaleft\"\n                                        id=\"distancevaleft\"\n                                        label=\"Distance (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"distancevabinocular\"\n                                        id=\"distancevabinocular\"\n                                        label=\"Distance (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.distancevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, distancevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaright\"\n                                        id=\"intermediatevaright\"\n                                        label=\"Intermediate (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevaleft\"\n                                        id=\"intermediatevaleft\"\n                                        label=\"Intermediate (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"intermediatevabinocular\"\n                                        id=\"intermediatevabinocular\"\n                                        label=\"Intermediate (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.intermediatevabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, intermediatevabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaright\"\n                                        id=\"nearvaright\"\n                                        label=\"Near (Right Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaright: event.target.value } })\n                                        }}\n\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvaleft\"\n                                        id=\"nearvaleft\"\n                                        label=\"Near (Left Eye)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvaleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvaleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={4}>\n                                    <TextField\n                                        name=\"nearvabinocular\"\n                                        id=\"nearvabinocular\"\n                                        label=\"Near (Binocular)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.nearvabinocular || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, nearvabinocular: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={6}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Current Prescription Date\"\n                                        value={patient.formData.refractioncurrentpresdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, refractioncurrentpresdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateright\"\n                                        id=\"spherepresdateright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateright\"\n                                        id=\"cylpresdateright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateright\"\n                                        id=\"axispresdateright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateright\"\n                                        id=\"addpresdateright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateright\"\n                                        id=\"vapresdateright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleft\"\n                                        id=\"spherepresdateleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleft\"\n                                        id=\"cylpresdateleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleft\"\n                                        id=\"axispresdateleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleft\"\n                                        id=\"addpresdateleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleft\"\n                                        id=\"vapresdateleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"spectype-label\">Spec Type</InputLabel>\n                                        <Select\n                                            label=\"Spec Type\"\n                                            labelId=\"spectype-label\"\n                                            id=\"spectype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractionsepctype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractionsepctype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Single Vision\"}>Single Vision</MenuItem>\n                                            <MenuItem value={\"Bifocal\"}>Bifocal</MenuItem>\n                                            <MenuItem value={\"Varifocal\"}>Varifocal</MenuItem>\n                                            <MenuItem value={\"RR\"}>RR</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n\n                                <Grid item xs={12}>\n                                    <DateField\n                                        // error={birthDateError}\n                                        title=\"Contact Lens Date\"\n                                        value={patient.formData.contactlensdate || ''}\n                                        dateChanged={(value) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, contactlensdate: value } })\n                                            // setBirthDateError(false)\n                                        }}\n                                        todayButton={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdaterightlens\"\n                                        id=\"spherepresdaterightlens\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdaterightlens\"\n                                        id=\"cylpresdaterightlens\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdaterightlens\"\n                                        id=\"axispresdaterightlens\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdaterightlens\"\n                                        id=\"addpresdaterightlens\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdaterightlens\"\n                                        id=\"vapresdaterightlens\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdaterightlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdaterightlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherepresdateleftlens\"\n                                        id=\"spherepresdateleftlens\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherepresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherepresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylpresdateleftlens\"\n                                        id=\"cylpresdateleftlens\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axispresdateleftlens\"\n                                        id=\"axispresdateleftlens\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axispresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axispresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addpresdateleftlens\"\n                                        id=\"addpresdateleftlens\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addpresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addpresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vapresdateleftlens\"\n                                        id=\"vapresdateleftlens\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vapresdateleftlens || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vapresdateleftlens: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth variant=\"outlined\" >\n                                        <InputLabel id=\"cltype-label\">CL Type</InputLabel>\n                                        <Select\n                                            label=\"CL Type\"\n                                            labelId=\"cltype-label\"\n                                            id=\"cltype-label\"\n                                            style={{ textAlign: \"center\" }}\n                                            fullWidth\n                                            value={patient.formData.refractioncltype || ''}\n                                            onChange={(event) => {\n                                                setPatient({ ...patient, formData: { ...patient.formData, refractioncltype: event.target.value } })\n                                            }}\n\n                                        >\n                                            <MenuItem value={\"Dailies Soft\"}>Dailies Soft</MenuItem>\n                                            <MenuItem value={\"Monthlies\"}>Monthlies</MenuItem>\n                                            <MenuItem value={\"RGP\"}>RGP</MenuItem>\n\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginBottom: \"20px\" }}></Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={7}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefright\"\n                                        id=\"sphereautorefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefright\"\n                                        id=\"cylautorefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefright\"\n                                        id=\"axisautorefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefright\"\n                                        id=\"vaautorefright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"sphereautorefleft\"\n                                        id=\"sphereautorefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.sphereautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, sphereautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylautorefleft\"\n                                        id=\"cylautorefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axisautorefleft\"\n                                        id=\"axisautorefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axisautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axisautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vaautorefleft\"\n                                        id=\"vaautorefleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vaautorefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vaautorefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={8}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <div className={classes.titleCenter}>\n                                        Manifest Refraction\n                                    </div>\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestright\"\n                                        id=\"spheremanifestright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestright\"\n                                        id=\"cylmanifestright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestright\"\n                                        id=\"axismanifestright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestright\"\n                                        id=\"addmanifestright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestright\"\n                                        id=\"vamanifestright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheremanifestleft\"\n                                        id=\"spheremanifestleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheremanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheremanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylmanifestleft\"\n                                        id=\"cylmanifestleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axismanifestleft\"\n                                        id=\"axismanifestleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axismanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axismanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addmanifestleft\"\n                                        id=\"addmanifestleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addmanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addmanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vamanifestleft\"\n                                        id=\"vamanifestleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vamanifestleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vamanifestleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} style={{ marginTop: \"50px\" }}>\n                                    <div className={classes.titleCenter}>\n                                        Cycloplegic Refraction\n                                    </div>\n                                </Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloright\"\n                                        id=\"spherecycloright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloright\"\n                                        id=\"cylcycloright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloright\"\n                                        id=\"axiscycloright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloright\"\n                                        id=\"addcycloright\"\n                                        label=\"Add (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloright\"\n                                        id=\"vacycloright\"\n                                        label=\"VA (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spherecycloleft\"\n                                        id=\"spherecycloleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spherecycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spherecycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cylcycloleft\"\n                                        id=\"cylcycloleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cylcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cylcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axiscycloleft\"\n                                        id=\"axiscycloleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axiscycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axiscycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"addcycloleft\"\n                                        id=\"addcycloleft\"\n                                        label=\"Add (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.addcycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, addcycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"vacycloleft\"\n                                        id=\"vacycloleft\"\n                                        label=\"VA (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.vacycloleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, vacycloleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n\n\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={value} index={9}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Right Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefright\"\n                                        id=\"spheretargetrefright\"\n                                        label=\"Sphere (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefright\"\n                                        id=\"cyltargetrefright\"\n                                        label=\"Cyl (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefright: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefright\"\n                                        id=\"axistargetrefright\"\n                                        label=\"Axis (RE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefright || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefright: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                                <Grid item xs={12} md={2}></Grid>\n\n\n                                <Grid item xs={12} md={2}> <div className={classes.eyeText}>Left Eye : </div></Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"spheretargetrefleft\"\n                                        id=\"spheretargetrefleft\"\n                                        label=\"Sphere (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.spheretargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, spheretargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"cyltargetrefleft\"\n                                        id=\"cyltargetrefleft\"\n                                        label=\"Cyl (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.cyltargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, cyltargetrefleft: event.target.value } })\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                    <TextField\n                                        name=\"axistargetrefleft\"\n                                        id=\"axistargetrefleft\"\n                                        label=\"Axis (LE)\"\n                                        fullWidth\n                                        multiline\n                                        rows={1}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.axistargetrefleft || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, axistargetrefleft: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                                <Grid item xs={12} md={2}>\n                                </Grid>\n                            </Grid>\n\n                        </TabPanel>\n                        <TabPanel value={value} index={10}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        name=\"recommendation\"\n                                        id=\"recommendation\"\n                                        label=\"Recommendation\"\n                                        fullWidth\n                                        multiline\n                                        rows={15}\n                                        variant=\"outlined\"\n                                        autoComplete=\"none\"\n                                        value={patient.formData.recommendation || ''}\n                                        onChange={(event) => {\n                                            setPatient({ ...patient, formData: { ...patient.formData, recommendation: event.target.value } })\n                                        }}\n                                    />\n\n                                </Grid>\n                            </Grid>\n                        </TabPanel>\n\n\n                    </div>\n\n                    <Backdrop\n                        className={classes.backdrop}\n                        open={saving}\n                    >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n\n                    <Dialog\n                        open={openDeleteDialog}\n                        onClose={handleCloseDeleteDialog}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle style={{ color: \"#d10202\", fontWeight: \"600\" }} id=\"alert-dialog-title\">\n                            {\"Delete Patient\"}\n                        </DialogTitle>\n                        <DialogContent>\n                            <DialogContentText\n                                style={{ color: \"#000\", fontWeight: \"500\" }}\n                                id=\"alert-dialog-description\"\n                            >\n                                Are you sure you want to delete this patient?\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDeleteDialog} color=\"default\">\n                                Back\n                                 </Button>\n                            <Button onClick={deleteClicked} variant=\"contained\" style={{ backgroundColor: \"#d10202\", color: \"#fff\" }}>\n                                Yes, Delete this patient\n                                 </Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </Dialog>\n            </React.Fragment>\n        </React.Fragment>\n    );\n}\n",["177","178"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/colors.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/BookingView.js",["179","180","181","182"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/Corporates.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/services/PDFService.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/DateFormatter.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/Title.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/Title.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/services/api.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/TimeStampDialog.js",["183","184","185","186","187","188","189","190","191","192","193","194"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/calendar-admin/WeekView.js",["195","196"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/NewBookingDialog.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/PayDialog.js",["212","213","214","215","216","217","218","219","220"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/calendar-admin/MonthView.js",["221","222"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/services/BookService.js",["223"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/services/PDFService.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/WeekViewCell.js",["224","225","226","227","228","229","230","231"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/DateDialog.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/TokenVerifier.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GlobalPath.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/PatientsTable.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/OV/calendar-admin/MonthViewCell.js",["301","302","303","304","305","306","307","308"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Museum/Chart.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/BookingTable.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/Corporates.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/Corporates.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/BookingView.js",["323","324","325","326"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/calendar-admin/WeekView.js",["327","328"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/CurrentVisits.js",["329","330","331","332"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/STD/PriceCalculator.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/Gynae/Title.js",[],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/PCR/calendar-admin/DayViewCell.js",["333","334","335","336","337"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/calendar-admin/WeekViewCell.js",["338","339"],"/Users/mohammad/MyProjects/museumdental-payment-admin/src/GP/NewBookingDialog.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],{"ruleId":"362","severity":1,"message":"363","line":6,"column":8,"nodeType":"364","messageId":"365","endLine":6,"endColumn":13},{"ruleId":"362","severity":1,"message":"366","line":7,"column":8,"nodeType":"364","messageId":"365","endLine":7,"endColumn":21},{"ruleId":"362","severity":1,"message":"367","line":11,"column":10,"nodeType":"364","messageId":"365","endLine":11,"endColumn":17},{"ruleId":"362","severity":1,"message":"368","line":18,"column":10,"nodeType":"364","messageId":"365","endLine":18,"endColumn":21},{"ruleId":"362","severity":1,"message":"369","line":39,"column":10,"nodeType":"364","messageId":"365","endLine":39,"endColumn":15},{"ruleId":"362","severity":1,"message":"370","line":39,"column":17,"nodeType":"364","messageId":"365","endLine":39,"endColumn":25},{"ruleId":"362","severity":1,"message":"371","line":41,"column":9,"nodeType":"364","messageId":"365","endLine":41,"endColumn":25},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"373","line":1,"column":36,"nodeType":"364","messageId":"365","endLine":1,"endColumn":44},{"ruleId":"362","severity":1,"message":"374","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":19},{"ruleId":"362","severity":1,"message":"375","line":8,"column":5,"nodeType":"364","messageId":"365","endLine":8,"endColumn":13},{"ruleId":"362","severity":1,"message":"376","line":12,"column":5,"nodeType":"364","messageId":"365","endLine":12,"endColumn":12},{"ruleId":"362","severity":1,"message":"377","line":13,"column":5,"nodeType":"364","messageId":"365","endLine":13,"endColumn":21},{"ruleId":"362","severity":1,"message":"378","line":16,"column":5,"nodeType":"364","messageId":"365","endLine":16,"endColumn":19},{"ruleId":"362","severity":1,"message":"379","line":18,"column":5,"nodeType":"364","messageId":"365","endLine":18,"endColumn":9},{"ruleId":"362","severity":1,"message":"367","line":24,"column":5,"nodeType":"364","messageId":"365","endLine":24,"endColumn":12},{"ruleId":"362","severity":1,"message":"380","line":27,"column":10,"nodeType":"364","messageId":"365","endLine":27,"endColumn":20},{"ruleId":"362","severity":1,"message":"381","line":33,"column":8,"nodeType":"364","messageId":"365","endLine":33,"endColumn":17},{"ruleId":"362","severity":1,"message":"382","line":34,"column":8,"nodeType":"364","messageId":"365","endLine":34,"endColumn":13},{"ruleId":"362","severity":1,"message":"383","line":36,"column":8,"nodeType":"364","messageId":"365","endLine":36,"endColumn":13},{"ruleId":"362","severity":1,"message":"384","line":39,"column":8,"nodeType":"364","messageId":"365","endLine":39,"endColumn":22},{"ruleId":"362","severity":1,"message":"385","line":40,"column":8,"nodeType":"364","messageId":"365","endLine":40,"endColumn":11},{"ruleId":"362","severity":1,"message":"386","line":42,"column":8,"nodeType":"364","messageId":"365","endLine":42,"endColumn":13},{"ruleId":"362","severity":1,"message":"387","line":43,"column":8,"nodeType":"364","messageId":"365","endLine":43,"endColumn":18},{"ruleId":"362","severity":1,"message":"388","line":45,"column":8,"nodeType":"364","messageId":"365","endLine":45,"endColumn":17},{"ruleId":"362","severity":1,"message":"389","line":46,"column":8,"nodeType":"364","messageId":"365","endLine":46,"endColumn":20},{"ruleId":"362","severity":1,"message":"390","line":48,"column":8,"nodeType":"364","messageId":"365","endLine":48,"endColumn":24},{"ruleId":"362","severity":1,"message":"369","line":147,"column":12,"nodeType":"364","messageId":"365","endLine":147,"endColumn":17},{"ruleId":"391","severity":1,"message":"392","line":198,"column":8,"nodeType":"393","endLine":198,"endColumn":35,"suggestions":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"362","severity":1,"message":"399","line":14,"column":31,"nodeType":"364","messageId":"365","endLine":14,"endColumn":60},{"ruleId":"362","severity":1,"message":"369","line":26,"column":10,"nodeType":"364","messageId":"365","endLine":26,"endColumn":15},{"ruleId":"391","severity":1,"message":"400","line":58,"column":9,"nodeType":"393","endLine":58,"endColumn":18,"suggestions":"401"},{"ruleId":"391","severity":1,"message":"400","line":72,"column":7,"nodeType":"393","endLine":72,"endColumn":9,"suggestions":"402"},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"373","line":1,"column":36,"nodeType":"364","messageId":"365","endLine":1,"endColumn":44},{"ruleId":"362","severity":1,"message":"403","line":3,"column":8,"nodeType":"364","messageId":"365","endLine":3,"endColumn":18},{"ruleId":"362","severity":1,"message":"375","line":6,"column":3,"nodeType":"364","messageId":"365","endLine":6,"endColumn":11},{"ruleId":"362","severity":1,"message":"377","line":9,"column":3,"nodeType":"364","messageId":"365","endLine":9,"endColumn":19},{"ruleId":"362","severity":1,"message":"379","line":11,"column":3,"nodeType":"364","messageId":"365","endLine":11,"endColumn":7},{"ruleId":"362","severity":1,"message":"404","line":13,"column":3,"nodeType":"364","messageId":"365","endLine":13,"endColumn":12},{"ruleId":"362","severity":1,"message":"367","line":14,"column":3,"nodeType":"364","messageId":"365","endLine":14,"endColumn":10},{"ruleId":"362","severity":1,"message":"380","line":17,"column":10,"nodeType":"364","messageId":"365","endLine":17,"endColumn":20},{"ruleId":"362","severity":1,"message":"405","line":19,"column":8,"nodeType":"364","messageId":"365","endLine":19,"endColumn":16},{"ruleId":"362","severity":1,"message":"369","line":191,"column":10,"nodeType":"364","messageId":"365","endLine":191,"endColumn":15},{"ruleId":"362","severity":1,"message":"370","line":191,"column":17,"nodeType":"364","messageId":"365","endLine":191,"endColumn":25},{"ruleId":"362","severity":1,"message":"406","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"406","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"378","line":12,"column":3,"nodeType":"364","messageId":"365","endLine":12,"endColumn":17},{"ruleId":"362","severity":1,"message":"379","line":14,"column":3,"nodeType":"364","messageId":"365","endLine":14,"endColumn":7},{"ruleId":"362","severity":1,"message":"407","line":18,"column":3,"nodeType":"364","messageId":"365","endLine":18,"endColumn":9},{"ruleId":"362","severity":1,"message":"367","line":20,"column":3,"nodeType":"364","messageId":"365","endLine":20,"endColumn":10},{"ruleId":"362","severity":1,"message":"408","line":25,"column":8,"nodeType":"364","messageId":"365","endLine":25,"endColumn":22},{"ruleId":"362","severity":1,"message":"383","line":34,"column":8,"nodeType":"364","messageId":"365","endLine":34,"endColumn":13},{"ruleId":"362","severity":1,"message":"386","line":40,"column":8,"nodeType":"364","messageId":"365","endLine":40,"endColumn":13},{"ruleId":"362","severity":1,"message":"387","line":41,"column":8,"nodeType":"364","messageId":"365","endLine":41,"endColumn":18},{"ruleId":"362","severity":1,"message":"388","line":43,"column":8,"nodeType":"364","messageId":"365","endLine":43,"endColumn":17},{"ruleId":"362","severity":1,"message":"409","line":44,"column":10,"nodeType":"364","messageId":"365","endLine":44,"endColumn":20},{"ruleId":"362","severity":1,"message":"410","line":48,"column":10,"nodeType":"364","messageId":"365","endLine":48,"endColumn":18},{"ruleId":"362","severity":1,"message":"411","line":52,"column":5,"nodeType":"364","messageId":"365","endLine":52,"endColumn":13},{"ruleId":"362","severity":1,"message":"369","line":317,"column":10,"nodeType":"364","messageId":"365","endLine":317,"endColumn":15},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"375","line":7,"column":3,"nodeType":"364","messageId":"365","endLine":7,"endColumn":11},{"ruleId":"362","severity":1,"message":"412","line":13,"column":3,"nodeType":"364","messageId":"365","endLine":13,"endColumn":13},{"ruleId":"362","severity":1,"message":"379","line":14,"column":3,"nodeType":"364","messageId":"365","endLine":14,"endColumn":7},{"ruleId":"362","severity":1,"message":"367","line":19,"column":3,"nodeType":"364","messageId":"365","endLine":19,"endColumn":10},{"ruleId":"362","severity":1,"message":"383","line":33,"column":8,"nodeType":"364","messageId":"365","endLine":33,"endColumn":13},{"ruleId":"362","severity":1,"message":"388","line":42,"column":8,"nodeType":"364","messageId":"365","endLine":42,"endColumn":17},{"ruleId":"362","severity":1,"message":"411","line":47,"column":5,"nodeType":"364","messageId":"365","endLine":47,"endColumn":13},{"ruleId":"362","severity":1,"message":"369","line":265,"column":10,"nodeType":"364","messageId":"365","endLine":265,"endColumn":15},{"ruleId":"362","severity":1,"message":"406","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"413","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":18},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"414","line":15,"column":7,"nodeType":"364","messageId":"365","endLine":15,"endColumn":28},{"ruleId":"362","severity":1,"message":"415","line":16,"column":7,"nodeType":"364","messageId":"365","endLine":16,"endColumn":27},{"ruleId":"362","severity":1,"message":"416","line":17,"column":7,"nodeType":"364","messageId":"365","endLine":17,"endColumn":28},{"ruleId":"362","severity":1,"message":"417","line":18,"column":7,"nodeType":"364","messageId":"365","endLine":18,"endColumn":30},{"ruleId":"362","severity":1,"message":"418","line":19,"column":7,"nodeType":"364","messageId":"365","endLine":19,"endColumn":30},{"ruleId":"391","severity":1,"message":"419","line":219,"column":8,"nodeType":"393","endLine":219,"endColumn":20,"suggestions":"420"},{"ruleId":"362","severity":1,"message":"421","line":535,"column":11,"nodeType":"364","messageId":"365","endLine":535,"endColumn":32},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"373","line":1,"column":36,"nodeType":"364","messageId":"365","endLine":1,"endColumn":44},{"ruleId":"362","severity":1,"message":"374","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":19},{"ruleId":"362","severity":1,"message":"403","line":3,"column":8,"nodeType":"364","messageId":"365","endLine":3,"endColumn":18},{"ruleId":"362","severity":1,"message":"422","line":5,"column":5,"nodeType":"364","messageId":"365","endLine":5,"endColumn":13},{"ruleId":"362","severity":1,"message":"375","line":7,"column":5,"nodeType":"364","messageId":"365","endLine":7,"endColumn":13},{"ruleId":"362","severity":1,"message":"423","line":8,"column":5,"nodeType":"364","messageId":"365","endLine":8,"endColumn":21},{"ruleId":"362","severity":1,"message":"377","line":11,"column":5,"nodeType":"364","messageId":"365","endLine":11,"endColumn":21},{"ruleId":"362","severity":1,"message":"378","line":13,"column":5,"nodeType":"364","messageId":"365","endLine":13,"endColumn":19},{"ruleId":"362","severity":1,"message":"379","line":15,"column":5,"nodeType":"364","messageId":"365","endLine":15,"endColumn":9},{"ruleId":"362","severity":1,"message":"404","line":19,"column":5,"nodeType":"364","messageId":"365","endLine":19,"endColumn":14},{"ruleId":"362","severity":1,"message":"367","line":20,"column":5,"nodeType":"364","messageId":"365","endLine":20,"endColumn":12},{"ruleId":"362","severity":1,"message":"380","line":23,"column":10,"nodeType":"364","messageId":"365","endLine":23,"endColumn":20},{"ruleId":"362","severity":1,"message":"408","line":25,"column":8,"nodeType":"364","messageId":"365","endLine":25,"endColumn":22},{"ruleId":"362","severity":1,"message":"383","line":34,"column":8,"nodeType":"364","messageId":"365","endLine":34,"endColumn":13},{"ruleId":"362","severity":1,"message":"424","line":36,"column":8,"nodeType":"364","messageId":"365","endLine":36,"endColumn":17},{"ruleId":"362","severity":1,"message":"384","line":37,"column":8,"nodeType":"364","messageId":"365","endLine":37,"endColumn":22},{"ruleId":"362","severity":1,"message":"385","line":38,"column":8,"nodeType":"364","messageId":"365","endLine":38,"endColumn":11},{"ruleId":"362","severity":1,"message":"386","line":40,"column":8,"nodeType":"364","messageId":"365","endLine":40,"endColumn":13},{"ruleId":"362","severity":1,"message":"387","line":41,"column":8,"nodeType":"364","messageId":"365","endLine":41,"endColumn":18},{"ruleId":"362","severity":1,"message":"388","line":43,"column":8,"nodeType":"364","messageId":"365","endLine":43,"endColumn":17},{"ruleId":"362","severity":1,"message":"409","line":44,"column":10,"nodeType":"364","messageId":"365","endLine":44,"endColumn":20},{"ruleId":"362","severity":1,"message":"389","line":45,"column":8,"nodeType":"364","messageId":"365","endLine":45,"endColumn":20},{"ruleId":"362","severity":1,"message":"425","line":255,"column":11,"nodeType":"364","messageId":"365","endLine":255,"endColumn":18},{"ruleId":"362","severity":1,"message":"369","line":257,"column":12,"nodeType":"364","messageId":"365","endLine":257,"endColumn":17},{"ruleId":"362","severity":1,"message":"370","line":257,"column":19,"nodeType":"364","messageId":"365","endLine":257,"endColumn":27},{"ruleId":"362","severity":1,"message":"375","line":3,"column":18,"nodeType":"364","messageId":"365","endLine":3,"endColumn":26},{"ruleId":"362","severity":1,"message":"423","line":3,"column":28,"nodeType":"364","messageId":"365","endLine":3,"endColumn":44},{"ruleId":"362","severity":1,"message":"426","line":3,"column":46,"nodeType":"364","messageId":"365","endLine":3,"endColumn":52},{"ruleId":"362","severity":1,"message":"427","line":3,"column":54,"nodeType":"364","messageId":"365","endLine":3,"endColumn":67},{"ruleId":"362","severity":1,"message":"428","line":3,"column":69,"nodeType":"364","messageId":"365","endLine":3,"endColumn":80},{"ruleId":"362","severity":1,"message":"376","line":3,"column":82,"nodeType":"364","messageId":"365","endLine":3,"endColumn":89},{"ruleId":"362","severity":1,"message":"429","line":3,"column":91,"nodeType":"364","messageId":"365","endLine":3,"endColumn":102},{"ruleId":"362","severity":1,"message":"377","line":3,"column":104,"nodeType":"364","messageId":"365","endLine":3,"endColumn":120},{"ruleId":"362","severity":1,"message":"430","line":3,"column":128,"nodeType":"364","messageId":"365","endLine":3,"endColumn":132},{"ruleId":"362","severity":1,"message":"412","line":3,"column":134,"nodeType":"364","messageId":"365","endLine":3,"endColumn":144},{"ruleId":"362","severity":1,"message":"379","line":3,"column":162,"nodeType":"364","messageId":"365","endLine":3,"endColumn":166},{"ruleId":"362","severity":1,"message":"431","line":3,"column":180,"nodeType":"364","messageId":"365","endLine":3,"endColumn":188},{"ruleId":"362","severity":1,"message":"432","line":3,"column":197,"nodeType":"364","messageId":"365","endLine":3,"endColumn":203},{"ruleId":"362","severity":1,"message":"433","line":3,"column":205,"nodeType":"364","messageId":"365","endLine":3,"endColumn":212},{"ruleId":"362","severity":1,"message":"407","line":3,"column":214,"nodeType":"364","messageId":"365","endLine":3,"endColumn":220},{"ruleId":"362","severity":1,"message":"434","line":6,"column":8,"nodeType":"364","messageId":"365","endLine":6,"endColumn":17},{"ruleId":"362","severity":1,"message":"435","line":7,"column":8,"nodeType":"364","messageId":"365","endLine":7,"endColumn":17},{"ruleId":"362","severity":1,"message":"436","line":9,"column":10,"nodeType":"364","messageId":"365","endLine":9,"endColumn":22},{"ruleId":"362","severity":1,"message":"399","line":10,"column":32,"nodeType":"364","messageId":"365","endLine":10,"endColumn":61},{"ruleId":"362","severity":1,"message":"437","line":20,"column":8,"nodeType":"364","messageId":"365","endLine":20,"endColumn":23},{"ruleId":"362","severity":1,"message":"438","line":27,"column":10,"nodeType":"364","messageId":"365","endLine":27,"endColumn":25},{"ruleId":"362","severity":1,"message":"439","line":28,"column":10,"nodeType":"364","messageId":"365","endLine":28,"endColumn":21},{"ruleId":"362","severity":1,"message":"440","line":33,"column":8,"nodeType":"364","messageId":"365","endLine":33,"endColumn":20},{"ruleId":"362","severity":1,"message":"441","line":35,"column":3,"nodeType":"364","messageId":"365","endLine":35,"endColumn":26},{"ruleId":"362","severity":1,"message":"442","line":36,"column":3,"nodeType":"364","messageId":"365","endLine":36,"endColumn":21},{"ruleId":"362","severity":1,"message":"443","line":37,"column":3,"nodeType":"364","messageId":"365","endLine":37,"endColumn":21},{"ruleId":"362","severity":1,"message":"444","line":40,"column":8,"nodeType":"364","messageId":"365","endLine":40,"endColumn":20},{"ruleId":"362","severity":1,"message":"408","line":41,"column":8,"nodeType":"364","messageId":"365","endLine":41,"endColumn":22},{"ruleId":"362","severity":1,"message":"445","line":42,"column":8,"nodeType":"364","messageId":"365","endLine":42,"endColumn":20},{"ruleId":"362","severity":1,"message":"446","line":45,"column":8,"nodeType":"364","messageId":"365","endLine":45,"endColumn":29},{"ruleId":"362","severity":1,"message":"447","line":46,"column":8,"nodeType":"364","messageId":"365","endLine":46,"endColumn":23},{"ruleId":"362","severity":1,"message":"448","line":50,"column":10,"nodeType":"364","messageId":"365","endLine":50,"endColumn":13},{"ruleId":"362","severity":1,"message":"449","line":256,"column":10,"nodeType":"364","messageId":"365","endLine":256,"endColumn":24},{"ruleId":"362","severity":1,"message":"370","line":314,"column":17,"nodeType":"364","messageId":"365","endLine":314,"endColumn":25},{"ruleId":"362","severity":1,"message":"450","line":318,"column":10,"nodeType":"364","messageId":"365","endLine":318,"endColumn":21},{"ruleId":"362","severity":1,"message":"451","line":323,"column":10,"nodeType":"364","messageId":"365","endLine":323,"endColumn":19},{"ruleId":"362","severity":1,"message":"452","line":324,"column":9,"nodeType":"364","messageId":"365","endLine":324,"endColumn":25},{"ruleId":"362","severity":1,"message":"453","line":332,"column":9,"nodeType":"364","messageId":"365","endLine":332,"endColumn":20},{"ruleId":"362","severity":1,"message":"454","line":334,"column":9,"nodeType":"364","messageId":"365","endLine":334,"endColumn":24},{"ruleId":"362","severity":1,"message":"455","line":356,"column":11,"nodeType":"364","messageId":"365","endLine":356,"endColumn":25},{"ruleId":"391","severity":1,"message":"400","line":388,"column":5,"nodeType":"393","endLine":388,"endColumn":17,"suggestions":"456"},{"ruleId":"391","severity":1,"message":"457","line":412,"column":5,"nodeType":"393","endLine":412,"endColumn":13,"suggestions":"458"},{"ruleId":"391","severity":1,"message":"400","line":419,"column":6,"nodeType":"393","endLine":419,"endColumn":38,"suggestions":"459"},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"415","line":155,"column":7,"nodeType":"364","messageId":"365","endLine":155,"endColumn":27},{"ruleId":"362","severity":1,"message":"416","line":156,"column":7,"nodeType":"364","messageId":"365","endLine":156,"endColumn":28},{"ruleId":"362","severity":1,"message":"417","line":157,"column":7,"nodeType":"364","messageId":"365","endLine":157,"endColumn":30},{"ruleId":"362","severity":1,"message":"418","line":158,"column":7,"nodeType":"364","messageId":"365","endLine":158,"endColumn":30},{"ruleId":"362","severity":1,"message":"460","line":177,"column":10,"nodeType":"364","messageId":"365","endLine":177,"endColumn":16},{"ruleId":"391","severity":1,"message":"461","line":238,"column":6,"nodeType":"393","endLine":238,"endColumn":15,"suggestions":"462"},{"ruleId":"362","severity":1,"message":"421","line":590,"column":9,"nodeType":"364","messageId":"365","endLine":590,"endColumn":30},{"ruleId":"362","severity":1,"message":"423","line":4,"column":28,"nodeType":"364","messageId":"365","endLine":4,"endColumn":44},{"ruleId":"362","severity":1,"message":"430","line":4,"column":128,"nodeType":"364","messageId":"365","endLine":4,"endColumn":132},{"ruleId":"362","severity":1,"message":"433","line":4,"column":205,"nodeType":"364","messageId":"365","endLine":4,"endColumn":212},{"ruleId":"362","severity":1,"message":"434","line":7,"column":8,"nodeType":"364","messageId":"365","endLine":7,"endColumn":17},{"ruleId":"362","severity":1,"message":"436","line":10,"column":10,"nodeType":"364","messageId":"365","endLine":10,"endColumn":22},{"ruleId":"362","severity":1,"message":"399","line":11,"column":31,"nodeType":"364","messageId":"365","endLine":11,"endColumn":60},{"ruleId":"362","severity":1,"message":"442","line":35,"column":3,"nodeType":"364","messageId":"365","endLine":35,"endColumn":21},{"ruleId":"362","severity":1,"message":"370","line":635,"column":17,"nodeType":"364","messageId":"365","endLine":635,"endColumn":25},{"ruleId":"362","severity":1,"message":"450","line":639,"column":10,"nodeType":"364","messageId":"365","endLine":639,"endColumn":21},{"ruleId":"362","severity":1,"message":"453","line":654,"column":9,"nodeType":"364","messageId":"365","endLine":654,"endColumn":20},{"ruleId":"362","severity":1,"message":"455","line":695,"column":11,"nodeType":"364","messageId":"365","endLine":695,"endColumn":25},{"ruleId":"391","severity":1,"message":"400","line":729,"column":9,"nodeType":"393","endLine":729,"endColumn":21,"suggestions":"463"},{"ruleId":"391","severity":1,"message":"457","line":753,"column":7,"nodeType":"393","endLine":753,"endColumn":15,"suggestions":"464"},{"ruleId":"391","severity":1,"message":"465","line":760,"column":10,"nodeType":"393","endLine":760,"endColumn":42,"suggestions":"466"},{"ruleId":"362","severity":1,"message":"399","line":14,"column":31,"nodeType":"364","messageId":"365","endLine":14,"endColumn":60},{"ruleId":"362","severity":1,"message":"369","line":26,"column":10,"nodeType":"364","messageId":"365","endLine":26,"endColumn":15},{"ruleId":"391","severity":1,"message":"400","line":58,"column":9,"nodeType":"393","endLine":58,"endColumn":18,"suggestions":"467"},{"ruleId":"391","severity":1,"message":"400","line":66,"column":7,"nodeType":"393","endLine":66,"endColumn":9,"suggestions":"468"},{"ruleId":"362","severity":1,"message":"406","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"379","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":12},{"ruleId":"362","severity":1,"message":"367","line":6,"column":32,"nodeType":"364","messageId":"365","endLine":6,"endColumn":39},{"ruleId":"362","severity":1,"message":"469","line":52,"column":7,"nodeType":"364","messageId":"365","endLine":52,"endColumn":17},{"ruleId":"362","severity":1,"message":"470","line":56,"column":7,"nodeType":"364","messageId":"365","endLine":56,"endColumn":15},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"471","line":160,"column":12,"nodeType":"364","messageId":"365","endLine":160,"endColumn":19},{"ruleId":"362","severity":1,"message":"472","line":160,"column":21,"nodeType":"364","messageId":"365","endLine":160,"endColumn":31},{"ruleId":"362","severity":1,"message":"460","line":162,"column":12,"nodeType":"364","messageId":"365","endLine":162,"endColumn":18},{"ruleId":"391","severity":1,"message":"473","line":237,"column":8,"nodeType":"393","endLine":237,"endColumn":52,"suggestions":"474"},{"ruleId":"362","severity":1,"message":"373","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"419","line":157,"column":8,"nodeType":"393","endLine":157,"endColumn":20,"suggestions":"475"},{"ruleId":"362","severity":1,"message":"406","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"372","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":34},{"ruleId":"362","severity":1,"message":"375","line":7,"column":3,"nodeType":"364","messageId":"365","endLine":7,"endColumn":11},{"ruleId":"362","severity":1,"message":"377","line":10,"column":3,"nodeType":"364","messageId":"365","endLine":10,"endColumn":19},{"ruleId":"362","severity":1,"message":"378","line":12,"column":3,"nodeType":"364","messageId":"365","endLine":12,"endColumn":17},{"ruleId":"362","severity":1,"message":"412","line":13,"column":3,"nodeType":"364","messageId":"365","endLine":13,"endColumn":13},{"ruleId":"362","severity":1,"message":"379","line":14,"column":3,"nodeType":"364","messageId":"365","endLine":14,"endColumn":7},{"ruleId":"362","severity":1,"message":"431","line":16,"column":3,"nodeType":"364","messageId":"365","endLine":16,"endColumn":11},{"ruleId":"362","severity":1,"message":"432","line":17,"column":3,"nodeType":"364","messageId":"365","endLine":17,"endColumn":9},{"ruleId":"362","severity":1,"message":"407","line":18,"column":3,"nodeType":"364","messageId":"365","endLine":18,"endColumn":9},{"ruleId":"362","severity":1,"message":"367","line":20,"column":3,"nodeType":"364","messageId":"365","endLine":20,"endColumn":10},{"ruleId":"362","severity":1,"message":"408","line":25,"column":8,"nodeType":"364","messageId":"365","endLine":25,"endColumn":22},{"ruleId":"362","severity":1,"message":"383","line":34,"column":8,"nodeType":"364","messageId":"365","endLine":34,"endColumn":13},{"ruleId":"362","severity":1,"message":"386","line":40,"column":8,"nodeType":"364","messageId":"365","endLine":40,"endColumn":13},{"ruleId":"362","severity":1,"message":"387","line":41,"column":8,"nodeType":"364","messageId":"365","endLine":41,"endColumn":18},{"ruleId":"362","severity":1,"message":"429","line":42,"column":8,"nodeType":"364","messageId":"365","endLine":42,"endColumn":19},{"ruleId":"362","severity":1,"message":"388","line":43,"column":8,"nodeType":"364","messageId":"365","endLine":43,"endColumn":17},{"ruleId":"362","severity":1,"message":"409","line":44,"column":10,"nodeType":"364","messageId":"365","endLine":44,"endColumn":20},{"ruleId":"362","severity":1,"message":"410","line":48,"column":10,"nodeType":"364","messageId":"365","endLine":48,"endColumn":18},{"ruleId":"362","severity":1,"message":"411","line":52,"column":5,"nodeType":"364","messageId":"365","endLine":52,"endColumn":13},{"ruleId":"362","severity":1,"message":"476","line":210,"column":7,"nodeType":"364","messageId":"365","endLine":210,"endColumn":15},{"ruleId":"362","severity":1,"message":"369","line":302,"column":10,"nodeType":"364","messageId":"365","endLine":302,"endColumn":15},"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'CurrentVisits' is defined but never used.","'Tooltip' is defined but never used.","'useLocation' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'fixedHeightPaper' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'BookService' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'FormControlLabel' is defined but never used.","'InputAdornment' is defined but never used.","'Link' is defined but never used.","'withStyles' is defined but never used.","'Draggable' is defined but never used.","'Paper' is defined but never used.","'Alert' is defined but never used.","'LinearProgress' is defined but never used.","'Box' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'NumberFormat' is defined but never used.","'AccessAlarmsIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.name' and 'props.surname'. Either include them or remove the dependency array. If 'setPatient' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.","ArrayExpression",["477"],"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"'FormatDateFromStringShortYear' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["480"],["481"],"'Typography' is defined but never used.","'TextField' is defined but never used.","'SendIcon' is defined but never used.","'useEffect' is defined but never used.","'Switch' is defined but never used.","'CreditCardIcon' is defined but never used.","'corporates' is defined but never used.","'validate' is defined but never used.","'interval' is defined but never used.","'InputLabel' is defined but never used.","'axiosRetry' is defined but never used.","'MAX_BOOKING_COUNT_PCR' is assigned a value but never used.","'MAX_BOOKING_COUNT_GP' is assigned a value but never used.","'MAX_BOOKING_COUNT_STD' is assigned a value but never used.","'MAX_BOOKING_COUNT_GYNAE' is assigned a value but never used.","'MAX_BOOKING_COUNT_BLOOD' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setState' and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["482"],"'getBookingsCountGauge' is assigned a value but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'PropTypes' is defined but never used.","'classes' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'FormControl' is defined but never used.","'Icon' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'SvgIcon' is defined but never used.","'CheckIcon' is defined but never used.","'CloseIcon' is defined but never used.","'getMenuIndex' is defined but never used.","'DescriptionIcon' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faFileExcel' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'BusinessIcon' is defined but never used.","'LocalAtmIcon' is defined but never used.","'ReactHTMLTableToExcel' is defined but never used.","'PriceCalculator' is defined but never used.","'set' is defined but never used.","'PaperComponent' is defined but never used.","'selectedRow' is assigned a value but never used.","'corporate' is assigned a value but never used.","'corporateChanged' is assigned a value but never used.","'lastPromise' is assigned a value but never used.","'formatTimeStamp' is assigned a value but never used.","'currentPromise' is assigned a value but never used.",["483"],"React Hook useEffect has a missing dependency: 'data.cachedBookings'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'data.cachedBookings'.",["484"],["485"],"'isPast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'disableDay', 'setState', and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["486"],["487"],["488"],"React Hook useEffect has missing dependencies: 'loadData' and 'topCount'. Either include them or remove the dependency array.",["489"],["490"],["491"],"'isThursday' is assigned a value but never used.","'isFriday' is assigned a value but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'openDialog', 'setState', and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["492"],["493"],"'Packages' is assigned a value but never used.",{"desc":"494","fix":"495"},"no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"502","fix":"510"},{"desc":"504","fix":"511"},{"desc":"512","fix":"513"},{"desc":"496","fix":"514"},{"desc":"498","fix":"515"},{"desc":"516","fix":"517"},{"desc":"500","fix":"518"},"Update the dependencies array to be: [props.patient, props.open, props.name, props.surname]",{"range":"519","text":"520"},"Update the dependencies array to be: [loadData, refresh]",{"range":"521","text":"522"},"Update the dependencies array to be: [loadData]",{"range":"523","text":"524"},"Update the dependencies array to be: [date, setState, state.AdminCalendarCache, time]",{"range":"525","text":"526"},"Update the dependencies array to be: [loadData, props.date]",{"range":"527","text":"528"},"Update the dependencies array to be: [data.cachedBookings, filter]",{"range":"529","text":"530"},"Update the dependencies array to be: [loadData, state.patientDialogDataChanged]",{"range":"531","text":"532"},"Update the dependencies array to be: [dateStr, disableDay, setState, state.AdminCalendarCache]",{"range":"533","text":"534"},{"range":"535","text":"528"},{"range":"536","text":"530"},"Update the dependencies array to be: [loadData, state.bookingDialogDataChanged, topCount]",{"range":"537","text":"538"},{"range":"539","text":"522"},{"range":"540","text":"524"},"Update the dependencies array to be: [date, time, state.bookingDialogDataChanged, openDialog, state.AdminCalendarCache, setState]",{"range":"541","text":"542"},{"range":"543","text":"526"},[5455,5482],"[props.patient, props.open, props.name, props.surname]",[1790,1799],"[loadData, refresh]",[2020,2022],"[loadData]",[5096,5108],"[date, setState, state.AdminCalendarCache, time]",[10243,10255],"[loadData, props.date]",[10906,10914],"[data.cachedBookings, filter]",[10961,10993],"[loadData, state.patientDialogDataChanged]",[5225,5234],"[dateStr, disableDay, setState, state.AdminCalendarCache]",[19349,19361],[20002,20010],[20082,20114],"[loadData, state.bookingDialogDataChanged, topCount]",[1788,1797],[1931,1933],[6590,6634],"[date, time, state.bookingDialogDataChanged, openDialog, state.AdminCalendarCache, setState]",[3874,3886]]